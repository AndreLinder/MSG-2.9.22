<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Resource">

    <!--Цвета сообщений собеседника и своих-->
    <LinearGradientBrush x:Key="FriendMessageColor" 
                         EndPoint="0.5,1" 
                         StartPoint="0.5,0">
        <GradientStop Color="#FFA7A7A7" Offset="0"/>
        <GradientStop Color="#FF33A8FA" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MyMessageColor" 
                         EndPoint="0.5,1" 
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFF8900" Offset="0"/>
        <GradientStop Color="#FFFFDC00" Offset="1"/>
    </LinearGradientBrush>
    
    

    <!--Цвета заливки-->
    <LinearGradientBrush x:Key="BackgroundColor" 
                         EndPoint="0,1" 
                         StartPoint="1,0">
        <GradientStop Color="#FFAD5D01" Offset="0"/>
        <GradientStop Color="#FFAD0183" Offset="0.5"/>
        <GradientStop Color="#FF4000CE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundColor2" 
                         EndPoint="0,1" 
                         StartPoint="1,0">
        <GradientStop Color="#FF522C00" Offset="0"/>
        <GradientStop Color="#FF5C0045" Offset="0.5"/>
        <GradientStop Color="#FF250076" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundButton" 
                         EndPoint="1,0.5" 
                         StartPoint="0,0.5">
        <GradientStop Color="#FF383838" Offset="0"/>
        <GradientStop Color="#FF0B0B0B" Offset="0.5"/>
        <GradientStop Color="#FF383838" Offset="1"/>
    </LinearGradientBrush>


    <!--Цвет границ элементов-->
    <LinearGradientBrush x:Key="BorderBrush" 
                     StartPoint="0.5,0" 
                     EndPoint="0.5,1">
        <GradientStopCollection>
            <GradientStop Color="#FF4800AD" Offset="1"/>
            <GradientStop Color="#FF0071FF" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>

    <!--Цвет текста-->
    <LinearGradientBrush x:Key="TextColor1"  
                     EndPoint="0.5,1"
                     MappingMode="RelativeToBoundingBox" 
                     StartPoint="0.5,0">
        <GradientStopCollection>
            <GradientStop Color="White" Offset="1"/>
            <GradientStop Color="Gray" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextColor2"  
                     EndPoint="0.5,1" 
                     MappingMode="RelativeToBoundingBox" 
                     StartPoint="0.5,0">
        <GradientStopCollection>
            <GradientStop Color="#FF383838" Offset="1"/>
            <GradientStop Color="Black" Offset="0.5"/>
            <GradientStop Color="#FF383838" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextColor3"  
                     EndPoint="0.5,1" 
                     MappingMode="RelativeToBoundingBox" 
                     StartPoint="0.5,0">
        <GradientStopCollection>
            <GradientStop Color="Gray" Offset="0.5"/>
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="Black" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>

    <!--Цвет кнопки-->
    <LinearGradientBrush x:Key="StandartButton"  EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStopCollection>
            <GradientStop Color="#FF4800AD" Offset="1"/>
            <GradientStop Color="#FF0071FF" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>
    <!--Цвет кнопки при наведении мыши-->
    <LinearGradientBrush x:Key="IsMouseOverColor"  EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStopCollection>
            <GradientStop Color="#FFDD4F00" Offset="1"/>
            <GradientStop Color="#FFC09538" Offset="0"/>
        </GradientStopCollection>
    </LinearGradientBrush>


    <!--Стиль для элементов TextBox-->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor3}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Palatino Linotype"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{TemplateBinding TextBox.Background}" 
                            BorderBrush="{TemplateBinding TextBox.BorderBrush}" 
                            BorderThickness="3" 
                            CornerRadius="11">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource IsMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource IsMouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxStyleMessage" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="90"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="/Icons/Exlamanation_Mark.png"
                               HorizontalAlignment="Right"
                               Grid.Column="0">
                        </Image>
                        <TextBlock Foreground="Black"
                                     Background="Transparent"
                                   Text="{TemplateBinding TextBox.Text}"
                                   FontFamily="Palatino Linotype"
                                   FontSize="16"
                                   HorizontalAlignment="Left"
                                   Grid.Column="1">
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="TextBox.TextChanged">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка затемнения фона-->
    <Style x:Key="ButtonBlurEffect" TargetType="Button">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{TemplateBinding Button.Background}">
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Стиль и переопределённый шаблон для кнопки-->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundButton}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{TemplateBinding Button.Background}" 
                            CornerRadius="5"/>
                        <TextBlock Text="{TemplateBinding Button.Content}" 
                                   FontSize="{TemplateBinding Button.FontSize}" 
                                   FontFamily="Palatino Linotype" 
                                   Foreground="{TemplateBinding Button.Foreground}" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource IsMouseOverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль и переопределённый шаблон для треугольной кнопки-->
    <Style x:Key="TriangleButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource StandartButton}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Name="border" 
                          Stroke="{TemplateBinding BorderBrush}" 
                          Fill="{TemplateBinding Background}" 
                          Data="M0,0 L 0,20 L 10,10" 
                          Width="30" 
                          Height="20"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{DynamicResource IsMouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Пробный стиль, возможно переопределю позже-->
    <Style x:Key="ButtonStyleICO" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource StandartButton}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Button.Background}" CornerRadius="12"/>
                        <Border x:Name="BorderHeight"
                                CornerRadius="8"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Height="0"
                                />
                        <Border x:Name="BorderWidth"
                                CornerRadius="8"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Width="0"/>
                        <Image Source="{TemplateBinding local:ButtonImage.Image}"
                               Height="12"
                               Width="12"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="0" To="15" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="0" To="15" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="15" To="0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="15" To="0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Пробный стиль, возможно переопределю позже-->
    <Style x:Key="ButtonStyleICO2" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Button.Background}" CornerRadius="12"/>
                        <Border x:Name="BorderHeight"
                                CornerRadius="12"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Height="0"
                                />
                        <Border x:Name="BorderWidth"
                                CornerRadius="12"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Width="0"/>
                        <Image Source="{TemplateBinding local:ButtonImage.Image}"
                               Height="20"
                               Width="20"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="0" To="25" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="0" To="25" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="25" To="0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="25" To="0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для элементов Label-->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Palatino Linotype"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBlock Text="{TemplateBinding Label.Content}">

                        </TextBlock>
                        <TextBlock Text="{TemplateBinding Label.Content}"
                                   Foreground="Black">
                            <TextBlock.Effect >
                                <DropShadowEffect
                                    ShadowDepth="1"
                                    Direction="15"
                                    Color="LightCyan"
                                    Opacity="1"
                                    BlurRadius="3">

                                </DropShadowEffect>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для элемента TextBlock-сообщения собеседника-->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="{StaticResource IsMouseOverColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor2}"/>
        <Setter Property="FontFamily" Value="Palatino Linotype"/>
        <Setter Property="FontSize" Value="12"/>
        <!--<Setter Property="Template">
        <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{TemplateBinding TextBlock.Background}" CornerRadius="10"/>
                        <TextBlock Text="{TemplateBinding TextBlock.Text}" FontSize="14" FontFamily="{TemplateBinding TetxBlock.FontFamily}"
                               Foreground="{TemplateBinding TextBlock.Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
        </Setter.Value>
    </Setter>-->
    </Style>

    <!--Доработанный шаблон PasswordBox'а-->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor3}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Width" Value="{Binding PasswordBox.Width}"/>
        <Setter Property="Height" Value="{Binding PasswordBox.Height}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border Background="{TemplateBinding PasswordBox.Background}" 
                                BorderBrush="{TemplateBinding PasswordBox.BorderBrush}" 
                                BorderThickness="3" 
                                CornerRadius="11">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource IsMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource IsMouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Шаблон кнопки для меню-->
    <Style x:Key="ButtonStyleMenu" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundButton}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor1}"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="20"
                                              MinHeight="20">
                            </RowDefinition>
                            <RowDefinition>
                            </RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Button.Background}" 
                                CornerRadius="0"
                                Grid.RowSpan="2">
                        </Border>
                        <Image HorizontalAlignment="Center"
                               Source="{TemplateBinding local:ButtonImage.Image}"
                               Grid.Row="0">
                        </Image>
                        <TextBlock Text="{TemplateBinding Button.Content}" 
                                   FontSize="12" 
                                   FontFamily="Palatino Linotype" 
                                   Foreground="{TemplateBinding Button.Foreground}" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource IsMouseOverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Шаблон для TextBox'а в списке чатов-->
    <Style x:Key="ChatListItem" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="40">
                            </ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border    CornerRadius="5" 
                                   Background="{TemplateBinding Button.Background}" 
                                   Grid.ColumnSpan="2">

                        </Border>
                        <Image     Source="Icons/Dialog.ico"
                                   Grid.Column="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Height="30"
                                   Width="30"/>
                        <TextBlock Text="{Binding Name}"  
                                   FontSize="14"
                                   Foreground="{TemplateBinding Button.Foreground}"
                                   FontFamily="Palatino Linotype"
                                   ToolTip="Чат"
                                   Grid.Column="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource IsMouseOverColor}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBox-->
    <Style x:Name="ListBoxStyle" TargetType="ListBox">
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding ListBox.Background}"
                                CornerRadius="15"
                                BorderThickness="5">
                        <ScrollViewer>
                            <ItemsPresenter Margin="4"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка-иконка с анимацией-->
    <Style x:Key="ButtonIconAnimation" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource IsMouseOverColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Button.Background}"
                                CornerRadius="12"/>
                        <Border x:Name="BorderHeight"
                                CornerRadius="12"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Height="0"
                                />
                        <Border x:Name="BorderWidth"
                                CornerRadius="12"
                                Grid.Column="0"
                                Grid.Row="0"
                                Background="{StaticResource IsMouseOverColor}"
                                Width="0"/>
                        <Label x:Name="TextIcon"
                                   Content="{TemplateBinding Button.Content}"
                                   Background="Transparent"
                                    Foreground="{StaticResource TextColor1}"
                                   Grid.Column="0"
                                   Grid.Row="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding Button.FontSize}"
                                   FontFamily="Palatino Linotype"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="0" To="28" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderWidth" Storyboard.TargetProperty="Width" From="0" To="160" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Storyboard.TargetName="TextIcon" Storyboard.TargetProperty="Foreground.Color" From="White" To="Black" Duration="0:0:0.2"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="28" To="0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderWidth" Storyboard.TargetProperty="Width" From="160" To="0" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Storyboard.TargetName="TextIcon" Storyboard.TargetProperty="Foreground.Color" From="Black" To="White" Duration="0:0:0.2"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Шаблон кнопки иконки-->
    <Style x:Key="ButtonIcon" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor2}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border 
                                CornerRadius="100"
                                Grid.Column="0"
                                Grid.Row="0"
                                BorderThickness="1">
                            <Border.Background>
                                <ImageBrush Stretch="Fill" ImageSource="{TemplateBinding local:ButtonImage.Image}"/>
                            </Border.Background>
                        </Border>
                        
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="0" To="30" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="0" To="30" Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetName="TextIcon" Storyboard.TargetProperty="Foreground.Color" From="White" To="Black" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Height" From="30" To="0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="BorderHeight" Storyboard.TargetProperty="Width" From="30" To="0" Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetName="TextIcon" Storyboard.TargetProperty="Foreground.Color" From="Black" To="White" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundColor2}"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor3}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,32,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left"  />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,32,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundButton}" BorderThickness="1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource TextColor1}"/>
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="White"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{StaticResource BackgroundColor2}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True"/>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource BackgroundColor2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

</ResourceDictionary>